{
  "$schema": "http://json-schema.org/schema#",
  "type": "object",
  "properties": {
    "nameOverride": {
      "type": "string",
      "default": "",
      "description": "Override the chart name used in Kubernetes resource names"
    },
    "fullnameOverride": {
      "type": "string",
      "default": "",
      "description": "Override the full name used for Kubernetes resources"
    },
    "replicaCount": {
      "type": "integer",
      "default": 1,
      "minimum": 1,
      "description": "Number of Nexus pod replicas to deploy"
    },
    "image": {
      "type": "object",
      "description": "Configuration for the Nexus container image",
      "properties": {
        "repository": {
          "type": "string",
          "default": "sonatype/nexus3",
          "description": "Docker image repository for the Nexus container"
        },
        "tag": {
          "type": "string",
          "default": "",
          "description": "Image tag (leave blank for chart default or latest)"
        },
        "pullPolicy": {
          "type": "string",
          "default": "IfNotPresent",
          "enum": ["Always", "IfNotPresent", "Never"],
          "description": "Image pull policy"
        }
      },
      "required": ["repository"]
    },
    "resources": {
      "type": "object",
      "description": "Resource requests and limits for the Nexus container",
      "properties": {
        "requests": {
          "type": "object",
          "description": "Minimum resources requested for the container",
          "properties": {
            "memory": {
              "type": "string",
              "default": "4Gi",
              "pattern": "^[0-9]+(Ei|Pi|Ti|Gi|Mi|Ki|E|P|T|G|M|K)?$",
              "description": "Amount of memory to request (e.g., 512Mi, 2Gi)"
            }
          },
          "required": ["memory"]
        }
      }
    },
    "volumeMounts": {
      "type": ["array", "null"],
      "items": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "Name of the volume" },
          "mountPath": { "type": "string", "description": "Path in the container where the volume will be mounted" },
          "subPath": { "type": "string", "description": "Optional sub-path inside the volume to mount" }
        },
        "required": ["name", "mountPath"]
      },
      "default": null,
      "description": "Additional volume mounts for the Nexus container"
    },
    "volumes": {
      "type": ["array", "null"],
      "items": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "Volume name" },
          "persistentVolumeClaim": {
            "type": "object",
            "description": "PersistentVolumeClaim to use for the volume",
            "properties": {
              "claimName": { "type": "string", "description": "Name of the existing PersistentVolumeClaim" }
            },
            "required": ["claimName"]
          }
        },
        "required": ["name", "persistentVolumeClaim"]
      },
      "default": null,
      "description": "Additional volumes to be mounted into the pod"
    },
    "hostname": {
      "type": "string",
      "default": "nexus",
      "description": "Hostname to assign to the Nexus pod/container"
    },
    "port": {
      "type": "integer",
      "default": 8081,
      "description": "Default port for the Nexus HTTP service (repository manager UI and API)"
    },
    "service": {
      "type": "object",
      "description": "Kubernetes service configuration for exposing Nexus",
      "properties": {
        "type": {
          "type": "string",
          "default": "ClusterIP",
          "enum": ["ClusterIP", "NodePort", "LoadBalancer", "ExternalName"],
          "description": "Kubernetes service type"
        },
        "ports": {
          "type": "array",
          "description": "List of ports to expose via the service",
          "items": {
            "type": "object",
            "properties": {
              "name": { "type": "string", "description": "Name of the service port" },
              "port": { "type": "integer", "description": "Service port number" },
              "targetPort": { "type": "integer", "description": "Target port on the pod" },
              "protocol": {
                "type": "string",
                "default": "TCP",
                "enum": ["TCP", "UDP"],
                "description": "Network protocol used by the service"
              }
            },
            "required": ["name", "port", "targetPort"]
          }
        }
      },
      "required": ["type", "ports"]
    },
    "ingress": {
      "type": "object",
      "description": "Ingress configuration for exposing Nexus via hostname",
      "properties": {
        "className": {
          "type": "string",
          "default": "nginx",
          "description": "Ingress class name (used to select the Ingress controller, e.g., nginx or traefik)"
        },
        "tls": {
          "type": ["array", "null"],
          "description": "TLS configuration for ingress",
          "items": {
            "type": "object",
            "properties": {
              "hosts": {
                "type": "array",
                "items": { "type": "string" },
                "description": "List of hosts for which the TLS certificate is valid"
              },
              "secretName": {
                "type": "string",
                "description": "Name of the secret containing TLS certificate"
              }
            },
            "required": ["hosts", "secretName"]
          },
          "default": null
        },
        "rules": {
          "type": ["array", "null"],
          "description": "List of ingress rules to configure",
          "items": {
            "type": "object",
            "properties": {
              "host": { "type": "string", "description": "Hostname for the ingress rule" },
              "http": {
                "type": "object",
                "properties": {
                  "paths": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "path": { "type": "string", "description": "Path to match in the ingress" },
                        "pathType": {
                          "type": "string",
                          "enum": ["Prefix", "Exact", "ImplementationSpecific"],
                          "description": "Path matching strategy"
                        },
                        "backend": {
                          "type": "object",
                          "properties": {
                            "service": {
                              "type": "object",
                              "properties": {
                                "name": { "type": "string", "description": "Name of the backend service" },
                                "port": {
                                  "type": "object",
                                  "properties": {
                                    "number": { "type": "integer", "description": "Service port number" }
                                  },
                                  "required": ["number"]
                                }
                              },
                              "required": ["name", "port"]
                            }
                          },
                          "required": ["service"]
                        }
                      },
                      "required": ["path", "pathType", "backend"]
                    }
                  }
                },
                "required": ["paths"]
              }
            },
            "required": ["host", "http"]
          },
          "default": null
        }
      },
      "default": {}
    }
  },
  "required": ["image", "service"]
}
